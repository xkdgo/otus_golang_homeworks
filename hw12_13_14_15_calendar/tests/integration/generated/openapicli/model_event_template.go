/*
Calendar API

A calendar service API specification

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapicli

import (
	"encoding/json"
)

// EventTemplate struct for EventTemplate
type EventTemplate struct {
	Id string `json:"id"`
	Title string `json:"title"`
	Datetimestart string `json:"datetimestart"`
	Duration string `json:"duration"`
	Alarmtime string `json:"alarmtime"`
}

// NewEventTemplate instantiates a new EventTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventTemplate(id string, title string, datetimestart string, duration string, alarmtime string) *EventTemplate {
	this := EventTemplate{}
	this.Id = id
	this.Title = title
	this.Datetimestart = datetimestart
	this.Duration = duration
	this.Alarmtime = alarmtime
	return &this
}

// NewEventTemplateWithDefaults instantiates a new EventTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventTemplateWithDefaults() *EventTemplate {
	this := EventTemplate{}
	return &this
}

// GetId returns the Id field value
func (o *EventTemplate) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *EventTemplate) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *EventTemplate) SetId(v string) {
	o.Id = v
}

// GetTitle returns the Title field value
func (o *EventTemplate) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *EventTemplate) GetTitleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *EventTemplate) SetTitle(v string) {
	o.Title = v
}

// GetDatetimestart returns the Datetimestart field value
func (o *EventTemplate) GetDatetimestart() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Datetimestart
}

// GetDatetimestartOk returns a tuple with the Datetimestart field value
// and a boolean to check if the value has been set.
func (o *EventTemplate) GetDatetimestartOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Datetimestart, true
}

// SetDatetimestart sets field value
func (o *EventTemplate) SetDatetimestart(v string) {
	o.Datetimestart = v
}

// GetDuration returns the Duration field value
func (o *EventTemplate) GetDuration() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *EventTemplate) GetDurationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *EventTemplate) SetDuration(v string) {
	o.Duration = v
}

// GetAlarmtime returns the Alarmtime field value
func (o *EventTemplate) GetAlarmtime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Alarmtime
}

// GetAlarmtimeOk returns a tuple with the Alarmtime field value
// and a boolean to check if the value has been set.
func (o *EventTemplate) GetAlarmtimeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Alarmtime, true
}

// SetAlarmtime sets field value
func (o *EventTemplate) SetAlarmtime(v string) {
	o.Alarmtime = v
}

func (o EventTemplate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["datetimestart"] = o.Datetimestart
	}
	if true {
		toSerialize["duration"] = o.Duration
	}
	if true {
		toSerialize["alarmtime"] = o.Alarmtime
	}
	return json.Marshal(toSerialize)
}

type NullableEventTemplate struct {
	value *EventTemplate
	isSet bool
}

func (v NullableEventTemplate) Get() *EventTemplate {
	return v.value
}

func (v *NullableEventTemplate) Set(val *EventTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableEventTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableEventTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventTemplate(val *EventTemplate) *NullableEventTemplate {
	return &NullableEventTemplate{value: val, isSet: true}
}

func (v NullableEventTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


