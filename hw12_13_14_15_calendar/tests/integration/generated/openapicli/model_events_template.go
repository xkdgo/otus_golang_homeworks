/*
Calendar API

A calendar service API specification

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapicli

import (
	"encoding/json"
)

// EventsTemplate struct for EventsTemplate
type EventsTemplate struct {
	Events []EventTemplate `json:"events"`
}

// NewEventsTemplate instantiates a new EventsTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventsTemplate(events []EventTemplate) *EventsTemplate {
	this := EventsTemplate{}
	this.Events = events
	return &this
}

// NewEventsTemplateWithDefaults instantiates a new EventsTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventsTemplateWithDefaults() *EventsTemplate {
	this := EventsTemplate{}
	return &this
}

// GetEvents returns the Events field value
func (o *EventsTemplate) GetEvents() []EventTemplate {
	if o == nil {
		var ret []EventTemplate
		return ret
	}

	return o.Events
}

// GetEventsOk returns a tuple with the Events field value
// and a boolean to check if the value has been set.
func (o *EventsTemplate) GetEventsOk() ([]EventTemplate, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Events, true
}

// SetEvents sets field value
func (o *EventsTemplate) SetEvents(v []EventTemplate) {
	o.Events = v
}

func (o EventsTemplate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["events"] = o.Events
	}
	return json.Marshal(toSerialize)
}

type NullableEventsTemplate struct {
	value *EventsTemplate
	isSet bool
}

func (v NullableEventsTemplate) Get() *EventsTemplate {
	return v.value
}

func (v *NullableEventsTemplate) Set(val *EventsTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableEventsTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableEventsTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventsTemplate(val *EventsTemplate) *NullableEventsTemplate {
	return &NullableEventsTemplate{value: val, isSet: true}
}

func (v NullableEventsTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventsTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


